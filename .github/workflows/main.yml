name: Run whispers on push

on:
  push:
    branches:
      - "**"  # ExÃ©cute l'action sur toutes les branches

jobs:
  run-whispers:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install whispers and jq
        run: |
          pip install whispers
          jq

      - name: Create config.yml
        run: |
            echo "ast: false" > ../test/config.yml
            echo "" >> ../test/config.yml
            echo "include:" >> ../test/config.yml
            echo "  files:" >> ../test/config.yml
            echo "    - \"**/*\"" >> ../test/config.yml
            echo "" >> ../test/config.yml
            echo "exclude:" >> ../test/config.yml
            echo "  files:" >> ../test/config.yml
            echo "    - .*(__pycache__|\.eggs|build|dev|\.vscode|\.git)" >> ../test/config.yml
            echo "    - .*(locale|lang(uage)?|spec|test|mock(ing)?|synthetic|dummy|fixture|example|e2e)s?" >> ../test/config.yml
            echo "    - .*(integration|node_modules)" >> ../test/config.yml
            echo "    - .*(package(-lock)?|npm-shrinkwrap)\.json" >> ../test/config.yml
            echo "" >> ../test/config.yml
            echo "  keys:" >> ../test/config.yml
            echo "    - .*(public|project|translation|row|col(umn)?|uniq(ue)?).*" >> ../test/config.yml
            echo "" >> ../test/config.yml
            echo "  values:" >> ../test/config.yml
            echo "    - ^(true|false|yes|no|on|off|secret|(en|dis)able|1|0)$" >> ../test/config.yml
            echo "    - ^((cn?trl|alt|shift|del|ins|esc|tab|f[\\d]+) ?[\\+_\\-\\\\/] ?)+[\\w]+$" >> ../test/config.yml
            echo "    - .*_(user|password|token|key|placeholder|name)$" >> ../test/config.yml
            echo "    - ^(aws_)?(access_key_id|secret_access_key|session_token|secretsmanager)$" >> ../test/config.yml
            echo "" >> ../test/config.yml
            echo "    # pour les variables \$(aws" >> ../test/config.yml
            echo "    - ^(\\$\\(\\s*aws)$" >> ../test/config.yml
            echo "" >> ../test/config.yml
            echo "    # pour les variables #/<...>" >> ../test/config.yml
            echo "    - ^(^#\\/.*)$" >> ../test/config.yml
            echo "" >> ../test/config.yml
            echo "    # pour les variables \$(<...>" >> ../test/config.yml
            echo "    - ^(^\\$\\(.*)$" >> ../test/config.yml

      - name: Run whispers with jq
        run: |
            result=$(whispers --xrules file-known . --xseverity Low,Info --config ../test/config.yml | jq .)

            # Parse the JSON result into categories based on severity
            low=$(echo "$result" | jq '[.[] | select(.severity == "Low")]')
            info=$(echo "$result" | jq '[.[] | select(.severity == "Info")]')
            medium=$(echo "$result" | jq '[.[] | select(.severity == "Medium")]')
            high=$(echo "$result" | jq '[.[] | select(.severity == "High")]')
            critical=$(echo "$result" | jq '[.[] | select(.severity == "Critical")]')

            # Add the heading to the summary
            # echo "### Whispers Result" >> $GITHUB_STEP_SUMMARY

            # Display each category with emojis
            if [[ $Medium != "[]" ]]; then
            echo "#### ðŸ”µ Low Severity" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo "$low" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            fi

            if [[ $info != "[]" ]]; then
            echo "#### ðŸŸ¢ Info Severity" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo "$info" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            fi

            if [[ $medium != "[]" ]]; then
            echo "#### ðŸŸ¡ Medium Severity" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo "$medium" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            fi

            if [[ $high != "[]" ]]; then
            echo "#### ðŸ”´ High Severity" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo "$high" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            fi

            if [[ $high != "[]" ]]; then
            echo "#### ðŸš¨ Critical Severity" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo "$critical" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            fi
    
